/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 public/models/Fish.gltf --types -o components/Models/Fish.tsx -r public 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Sphere026: THREE.SkinnedMesh;
    Sphere026_1: THREE.SkinnedMesh;
    Sphere026_2: THREE.SkinnedMesh;
    Sphere026_3: THREE.SkinnedMesh;
    Sphere026_4: THREE.SkinnedMesh;
    Sphere026_5: THREE.SkinnedMesh;
    Root: THREE.Bone;
  };
  materials: {
    Fish_Main: THREE.MeshStandardMaterial;
    Fish_Secondary: THREE.MeshStandardMaterial;
    Eye_Black: THREE.MeshStandardMaterial;
    Eye_White: THREE.MeshStandardMaterial;
    Mouth: THREE.MeshStandardMaterial;
    Fish_Flaps: THREE.MeshStandardMaterial;
  };
};

type ActionName =
  | "Death"
  | "Duck"
  | "HitReact"
  | "Idle"
  | "Jump"
  | "Jump_Idle"
  | "Jump_Land"
  | "No"
  | "Punch"
  | "Run"
  | "Walk"
  | "Wave"
  | "Weapon"
  | "Yes";
type GLTFActions = Record<ActionName, THREE.AnimationAction> | null;

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<
    JSX.IntrinsicElements["skinnedMesh"] | JSX.IntrinsicElements["bone"]
  >
>;

type Props = JSX.IntrinsicElements["group"] & { hovered: boolean };

export default function Fish({ hovered, ...props }: Props) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "/models/Fish.gltf"
  ) as GLTFResult;
  const { actions: _actions } = useAnimations(animations, group);
  const actions = _actions as GLTFActions;

  React.useEffect(() => {
    const name: ActionName = hovered ? "Wave" : "Idle";

    actions?.[name].reset().fadeIn(0.5).play();

    return () => actions?.[name].fadeOut(0.5) as unknown as void;
  }, [hovered]);

  return (
    <group ref={group as React.Ref<THREE.Group>} {...props} dispose={null}>
      <group name="Scene">
        <group name="CharacterArmature">
          <primitive object={nodes.Root} />
          <group name="Fish">
            <skinnedMesh
              name="Sphere026"
              geometry={nodes.Sphere026.geometry}
              material={materials.Fish_Main}
              skeleton={nodes.Sphere026.skeleton}
            />
            <skinnedMesh
              name="Sphere026_1"
              geometry={nodes.Sphere026_1.geometry}
              material={materials.Fish_Secondary}
              skeleton={nodes.Sphere026_1.skeleton}
            />
            <skinnedMesh
              name="Sphere026_2"
              geometry={nodes.Sphere026_2.geometry}
              material={materials.Eye_Black}
              skeleton={nodes.Sphere026_2.skeleton}
            />
            <skinnedMesh
              name="Sphere026_3"
              geometry={nodes.Sphere026_3.geometry}
              material={materials.Eye_White}
              skeleton={nodes.Sphere026_3.skeleton}
            />
            <skinnedMesh
              name="Sphere026_4"
              geometry={nodes.Sphere026_4.geometry}
              material={materials.Mouth}
              skeleton={nodes.Sphere026_4.skeleton}
            />
            <skinnedMesh
              name="Sphere026_5"
              geometry={nodes.Sphere026_5.geometry}
              material={materials.Fish_Flaps}
              skeleton={nodes.Sphere026_5.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/Fish.gltf");
