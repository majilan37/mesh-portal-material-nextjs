/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 public/models/Dragon_Evolved.gltf --types -o components/Models/DragonEvolved.tsx -r public 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Characters } from "@/types";

type GLTFResult = GLTF & {
  nodes: {
    Cube221: THREE.SkinnedMesh;
    Cube221_1: THREE.SkinnedMesh;
    Cube221_2: THREE.SkinnedMesh;
    Cube221_3: THREE.SkinnedMesh;
    Cube221_4: THREE.SkinnedMesh;
    Root: THREE.Bone;
  };
  materials: {
    Dragon_Main: THREE.MeshStandardMaterial;
    Dragon_Secondary: THREE.MeshStandardMaterial;
    Dragon_Horn: THREE.MeshStandardMaterial;
    Eye_Black: THREE.MeshStandardMaterial;
    Eye_White: THREE.MeshStandardMaterial;
  };
};

type ActionName =
  | "Death"
  | "Fast_Flying"
  | "Flying_Idle"
  | "Headbutt"
  | "HitReact"
  | "No"
  | "Punch"
  | "Yes";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<
    JSX.IntrinsicElements["skinnedMesh"] | JSX.IntrinsicElements["bone"]
  >
>;

type Props = {
  hovered: boolean;
} & JSX.IntrinsicElements["group"];

export default function DragonEvolved({ hovered, ...props }: Props) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "/models/Dragon_Evolved.gltf"
  ) as GLTFResult;
  const { actions: _actions } = useAnimations(animations, group);
  const actions = _actions as GLTFActions;

  React.useEffect(() => {
    const name: keyof GLTFActions = hovered ? "Headbutt" : "Flying_Idle";
    actions?.[name].reset().fadeIn(0.5).play();

    return () => actions?.[name].fadeOut(0.5) as unknown as void;
  }, [hovered]);

  return (
    <group ref={group as React.Ref<THREE.Group>} {...props} dispose={null}>
      <group name="Scene">
        <group name="CharacterArmature">
          <primitive object={nodes.Root} />
          <group name="Dragon">
            <skinnedMesh
              name="Cube221"
              geometry={nodes.Cube221.geometry}
              material={materials.Dragon_Main}
              skeleton={nodes.Cube221.skeleton}
            />
            <skinnedMesh
              name="Cube221_1"
              geometry={nodes.Cube221_1.geometry}
              material={materials.Dragon_Secondary}
              skeleton={nodes.Cube221_1.skeleton}
            />
            <skinnedMesh
              name="Cube221_2"
              geometry={nodes.Cube221_2.geometry}
              material={materials.Dragon_Horn}
              skeleton={nodes.Cube221_2.skeleton}
            />
            <skinnedMesh
              name="Cube221_3"
              geometry={nodes.Cube221_3.geometry}
              material={materials.Eye_Black}
              skeleton={nodes.Cube221_3.skeleton}
            />
            <skinnedMesh
              name="Cube221_4"
              geometry={nodes.Cube221_4.geometry}
              material={materials.Eye_White}
              skeleton={nodes.Cube221_4.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/Dragon_Evolved.gltf");
